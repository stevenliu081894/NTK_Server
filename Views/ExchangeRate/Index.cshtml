@using NTKServer.ViewModels.ExchangeRate;
@model ExchangeRateVm
@{
    var Filter = (ExchangeRateFilter)@Model.filter;
	var lang = ViewBag.Lang;
}

<div class="card">
    <form asp-action="Index">
        <div class="card-body row">
			<div class="col-auto">
				<label class="control-label">@lang["begin_time"]</label>
				<input type="date" asp-for="@Filter.begin_time" class="form-control" />
			</div>
			<div class="col-auto">
				<label class="control-label">@lang["end_time"]</label>
				<input type="date" asp-for="@Filter.end_time" class="form-control" />
			</div>
			<div class="col-auto">
				<label class="control-label">@lang["currency_symbol"]</label>
				<input asp-for="@Filter.currency_symbol" class="form-control" />
			</div>
			<div class="col-auto">
				<label class="control-label">@lang["base_symbol"]</label>
				<input asp-for="@Filter.base_symbol" class="form-control" />
			</div>

        </div>
        <div class="card-footer">
            <div class="form-group pull-right">
                <input type="submit" value="@lang["public:search"]" class="btn btn-primary pull-right" />
            </div>
        </div>
    </form>
</div>

<div class="scoll_table">
    <table class="table">
        <thead>
            <tr>
                <th>@lang["public:option"]</th>			
				<th>@lang["currency_symbol"]</th>
				<th>@lang["base_symbol"]</th>
				<th>@lang["inward_rate"]</th>
				<th>@lang["outward_rate"]</th>
				<th>@lang["create_time"]</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.list)
            {
                <tr>
                    <td></td>
				    <td>@Html.DisplayFor(modelItem => item.currency_symbol)</td>
				    <td>@Html.DisplayFor(modelItem => item.base_symbol)</td>
				    <td>@Html.DisplayFor(modelItem => item.inward_rate)</td>
				    <td>@Html.DisplayFor(modelItem => item.outward_rate)</td>
				    <td>@Html.DisplayFor(modelItem => item.create_time)</td>

                </tr>
            }
        </tbody>
    </table>
</div>

<!-- 分頁處理 -->
<div class="card-footer px-3 border-0 d-flex flex-column flex-lg-row align-items-center justify-content-between">

    @if (Model != null)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination mb-0">

                @Html.PagedListPager((IPagedList)Model.list, page => Url.Action("Index", new {Model.filter, page}),
            new X.PagedList.Web.Common.PagedListRenderOptions()
            {
				LiElementClasses = new string[] { "page-item" },
				PageClasses = new string[] { "page-link" },
				LinkToFirstPageFormat ="<<",
				LinkToPreviousPageFormat = "<",
				LinkToNextPageFormat = ">",
				LinkToLastPageFormat = ">>",

				MaximumPageNumbersToDisplay = 8
            })
            </ul>
        </nav>
    }

    <div class="fw-normal small mt-4 mt-lg-0">@lang["public:total_count"]: @Model.list.TotalItemCount </div>
</div>